"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stream/route";
exports.ids = ["app/api/stream/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Cheff_Downloads_vibecodingcoin_src_app_api_stream_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/stream/route.ts */ \"(rsc)/./src/app/api/stream/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stream/route\",\n        pathname: \"/api/stream\",\n        filename: \"route\",\n        bundlePath: \"app/api/stream/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Cheff\\\\Downloads\\\\vibecodingcoin\\\\src\\\\app\\\\api\\\\stream\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Cheff_Downloads_vibecodingcoin_src_app_api_stream_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/stream/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdHJlYW0lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN0cmVhbSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN0cmVhbSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNDaGVmZiU1Q0Rvd25sb2FkcyU1Q3ZpYmVjb2Rpbmdjb2luJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNDaGVmZiU1Q0Rvd25sb2FkcyU1Q3ZpYmVjb2Rpbmdjb2luJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzRCO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmliZWNvZGluZ2NvaW4tcGl4ZWwtYmF0dGxlLz8wMmRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXENoZWZmXFxcXERvd25sb2Fkc1xcXFx2aWJlY29kaW5nY29pblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxzdHJlYW1cXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3N0cmVhbS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0cmVhbVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3RyZWFtL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcQ2hlZmZcXFxcRG93bmxvYWRzXFxcXHZpYmVjb2Rpbmdjb2luXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHN0cmVhbVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zdHJlYW0vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/stream/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/stream/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var _server_gameEngine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/server/gameEngine */ \"(rsc)/./src/server/gameEngine.ts\");\n\nconst runtime = \"nodejs\";\nconst dynamic = \"force-dynamic\";\nasync function GET() {\n    const stream = new ReadableStream({\n        start (controller) {\n            const encoder = new TextEncoder();\n            // Send initial event based on current server phase\n            try {\n                const s = (0,_server_gameEngine__WEBPACK_IMPORTED_MODULE_0__.getCurrentState)();\n                if (s.phase === \"running\") {\n                    const initial = {\n                        type: \"snapshot\",\n                        tick: s.tick,\n                        startMs: s.startMs,\n                        roundId: s.roundId,\n                        pixels: s.pixels,\n                        holders: s.holders\n                    };\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify(initial)}\\n\\n`));\n                } else if (s.phase === \"winner\" && typeof s.winnerIndex === \"number\") {\n                    const initial = {\n                        type: \"winner\",\n                        winnerIndex: s.winnerIndex,\n                        nextRoundAt: s.nextRoundAt,\n                        holders: s.holders\n                    };\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify(initial)}\\n\\n`));\n                } else if (s.phase === \"claim\" || s.phase === \"snapshot\" || s.phase === \"starting\") {\n                    const initial = {\n                        type: \"phase\",\n                        phase: s.phase,\n                        endsAt: s.nextPhaseAt,\n                        feesPoolLamports: s.feesPoolLamports,\n                        holders: s.phase === \"snapshot\" ? s.holders : undefined\n                    };\n                    controller.enqueue(encoder.encode(`data: ${JSON.stringify(initial)}\\n\\n`));\n                }\n            } catch  {}\n            const remove = (0,_server_gameEngine__WEBPACK_IMPORTED_MODULE_0__.addClient)((chunk)=>controller.enqueue(chunk));\n            controller.enqueue(new TextEncoder().encode(\"retry: 1000\\n\\n\"));\n            return ()=>{\n                try {\n                    remove();\n                } catch  {}\n            };\n        }\n    });\n    return new Response(stream, {\n        headers: {\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache, no-transform\",\n            Connection: \"keep-alive\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9zdHJlYW0vcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnRTtBQUV6RCxNQUFNRSxVQUFVLFNBQVE7QUFDeEIsTUFBTUMsVUFBVSxnQkFBZTtBQUUvQixlQUFlQztJQUNwQixNQUFNQyxTQUFTLElBQUlDLGVBQTJCO1FBQzVDQyxPQUFNQyxVQUFVO1lBQ2QsTUFBTUMsVUFBVSxJQUFJQztZQUVwQixtREFBbUQ7WUFDbkQsSUFBSTtnQkFDRixNQUFNQyxJQUFJVixtRUFBZUE7Z0JBQ3pCLElBQUlVLEVBQUVDLEtBQUssS0FBSyxXQUFXO29CQUN6QixNQUFNQyxVQUFVO3dCQUFFQyxNQUFNO3dCQUFZQyxNQUFNSixFQUFFSSxJQUFJO3dCQUFFQyxTQUFTTCxFQUFFSyxPQUFPO3dCQUFFQyxTQUFTTixFQUFFTSxPQUFPO3dCQUFFQyxRQUFRUCxFQUFFTyxNQUFNO3dCQUFFQyxTQUFTUixFQUFFUSxPQUFPO29CQUFDO29CQUMvSFgsV0FBV1ksT0FBTyxDQUFDWCxRQUFRWSxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUVDLEtBQUtDLFNBQVMsQ0FBQ1YsU0FBUyxJQUFJLENBQUM7Z0JBQzFFLE9BQU8sSUFBSUYsRUFBRUMsS0FBSyxLQUFLLFlBQVksT0FBT0QsRUFBRWEsV0FBVyxLQUFLLFVBQVU7b0JBQ3BFLE1BQU1YLFVBQVU7d0JBQUVDLE1BQU07d0JBQVVVLGFBQWFiLEVBQUVhLFdBQVc7d0JBQUVDLGFBQWFkLEVBQUVjLFdBQVc7d0JBQUVOLFNBQVNSLEVBQUVRLE9BQU87b0JBQUM7b0JBQzdHWCxXQUFXWSxPQUFPLENBQUNYLFFBQVFZLE1BQU0sQ0FBQyxDQUFDLE1BQU0sRUFBRUMsS0FBS0MsU0FBUyxDQUFDVixTQUFTLElBQUksQ0FBQztnQkFDMUUsT0FBTyxJQUFJRixFQUFFQyxLQUFLLEtBQUssV0FBV0QsRUFBRUMsS0FBSyxLQUFLLGNBQWNELEVBQUVDLEtBQUssS0FBSyxZQUFZO29CQUNsRixNQUFNQyxVQUFVO3dCQUFFQyxNQUFNO3dCQUFTRixPQUFPRCxFQUFFQyxLQUFLO3dCQUFFYyxRQUFRZixFQUFFZ0IsV0FBVzt3QkFBRUMsa0JBQWtCLEVBQVdBLGdCQUFnQjt3QkFBRVQsU0FBU1IsRUFBRUMsS0FBSyxLQUFLLGFBQWFELEVBQUVRLE9BQU8sR0FBR1U7b0JBQVU7b0JBQy9LckIsV0FBV1ksT0FBTyxDQUFDWCxRQUFRWSxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUVDLEtBQUtDLFNBQVMsQ0FBQ1YsU0FBUyxJQUFJLENBQUM7Z0JBQzFFO1lBQ0YsRUFBRSxPQUFNLENBQUM7WUFFVCxNQUFNaUIsU0FBUzlCLDZEQUFTQSxDQUFDLENBQUMrQixRQUFVdkIsV0FBV1ksT0FBTyxDQUFDVztZQUN2RHZCLFdBQVdZLE9BQU8sQ0FBQyxJQUFJVixjQUFjVyxNQUFNLENBQUM7WUFDNUMsT0FBTztnQkFDTCxJQUFJO29CQUFFUztnQkFBUyxFQUFFLE9BQU0sQ0FBQztZQUMxQjtRQUNGO0lBQ0Y7SUFFQSxPQUFPLElBQUlFLFNBQVMzQixRQUFRO1FBQzFCNEIsU0FBUztZQUNQLGdCQUFnQjtZQUNoQixpQkFBaUI7WUFDakJDLFlBQVk7UUFDZDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aWJlY29kaW5nY29pbi1waXhlbC1iYXR0bGUvLi9zcmMvYXBwL2FwaS9zdHJlYW0vcm91dGUudHM/NmRjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhZGRDbGllbnQsIGdldEN1cnJlbnRTdGF0ZSB9IGZyb20gJ0Avc2VydmVyL2dhbWVFbmdpbmUnXG5cbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcydcbmV4cG9ydCBjb25zdCBkeW5hbWljID0gJ2ZvcmNlLWR5bmFtaWMnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIGNvbnN0IHN0cmVhbSA9IG5ldyBSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5Pih7XG4gICAgc3RhcnQoY29udHJvbGxlcikge1xuICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpXG5cbiAgICAgIC8vIFNlbmQgaW5pdGlhbCBldmVudCBiYXNlZCBvbiBjdXJyZW50IHNlcnZlciBwaGFzZVxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcyA9IGdldEN1cnJlbnRTdGF0ZSgpXG4gICAgICAgIGlmIChzLnBoYXNlID09PSAncnVubmluZycpIHtcbiAgICAgICAgICBjb25zdCBpbml0aWFsID0geyB0eXBlOiAnc25hcHNob3QnLCB0aWNrOiBzLnRpY2ssIHN0YXJ0TXM6IHMuc3RhcnRNcywgcm91bmRJZDogcy5yb3VuZElkLCBwaXhlbHM6IHMucGl4ZWxzLCBob2xkZXJzOiBzLmhvbGRlcnMgfVxuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShgZGF0YTogJHtKU09OLnN0cmluZ2lmeShpbml0aWFsKX1cXG5cXG5gKSlcbiAgICAgICAgfSBlbHNlIGlmIChzLnBoYXNlID09PSAnd2lubmVyJyAmJiB0eXBlb2Ygcy53aW5uZXJJbmRleCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICBjb25zdCBpbml0aWFsID0geyB0eXBlOiAnd2lubmVyJywgd2lubmVySW5kZXg6IHMud2lubmVySW5kZXgsIG5leHRSb3VuZEF0OiBzLm5leHRSb3VuZEF0LCBob2xkZXJzOiBzLmhvbGRlcnMgfVxuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShgZGF0YTogJHtKU09OLnN0cmluZ2lmeShpbml0aWFsKX1cXG5cXG5gKSlcbiAgICAgICAgfSBlbHNlIGlmIChzLnBoYXNlID09PSAnY2xhaW0nIHx8IHMucGhhc2UgPT09ICdzbmFwc2hvdCcgfHwgcy5waGFzZSA9PT0gJ3N0YXJ0aW5nJykge1xuICAgICAgICAgIGNvbnN0IGluaXRpYWwgPSB7IHR5cGU6ICdwaGFzZScsIHBoYXNlOiBzLnBoYXNlLCBlbmRzQXQ6IHMubmV4dFBoYXNlQXQsIGZlZXNQb29sTGFtcG9ydHM6IChzIGFzIGFueSkuZmVlc1Bvb2xMYW1wb3J0cywgaG9sZGVyczogcy5waGFzZSA9PT0gJ3NuYXBzaG90JyA/IHMuaG9sZGVycyA6IHVuZGVmaW5lZCB9IGFzIGFueVxuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShgZGF0YTogJHtKU09OLnN0cmluZ2lmeShpbml0aWFsKX1cXG5cXG5gKSlcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCB7fVxuXG4gICAgICBjb25zdCByZW1vdmUgPSBhZGRDbGllbnQoKGNodW5rKSA9PiBjb250cm9sbGVyLmVucXVldWUoY2h1bmspKVxuICAgICAgY29udHJvbGxlci5lbnF1ZXVlKG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSgncmV0cnk6IDEwMDBcXG5cXG4nKSlcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHRyeSB7IHJlbW92ZSgpIH0gY2F0Y2gge31cbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIG5ldyBSZXNwb25zZShzdHJlYW0sIHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ3RleHQvZXZlbnQtc3RyZWFtJyxcbiAgICAgICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlLCBuby10cmFuc2Zvcm0nLFxuICAgICAgQ29ubmVjdGlvbjogJ2tlZXAtYWxpdmUnXG4gICAgfVxuICB9KVxufVxuXG5cbiJdLCJuYW1lcyI6WyJhZGRDbGllbnQiLCJnZXRDdXJyZW50U3RhdGUiLCJydW50aW1lIiwiZHluYW1pYyIsIkdFVCIsInN0cmVhbSIsIlJlYWRhYmxlU3RyZWFtIiwic3RhcnQiLCJjb250cm9sbGVyIiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwicyIsInBoYXNlIiwiaW5pdGlhbCIsInR5cGUiLCJ0aWNrIiwic3RhcnRNcyIsInJvdW5kSWQiLCJwaXhlbHMiLCJob2xkZXJzIiwiZW5xdWV1ZSIsImVuY29kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ3aW5uZXJJbmRleCIsIm5leHRSb3VuZEF0IiwiZW5kc0F0IiwibmV4dFBoYXNlQXQiLCJmZWVzUG9vbExhbXBvcnRzIiwidW5kZWZpbmVkIiwicmVtb3ZlIiwiY2h1bmsiLCJSZXNwb25zZSIsImhlYWRlcnMiLCJDb25uZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/stream/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/server/gameEngine.ts":
/*!**********************************!*\
  !*** ./src/server/gameEngine.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClient: () => (/* binding */ addClient),\n/* harmony export */   getCurrentState: () => (/* binding */ getCurrentState),\n/* harmony export */   isRunning: () => (/* binding */ isRunning),\n/* harmony export */   setOnWinner: () => (/* binding */ setOnWinner),\n/* harmony export */   startRound: () => (/* binding */ startRound),\n/* harmony export */   startServerFlow: () => (/* binding */ startServerFlow)\n/* harmony export */ });\n// Simple server-side game engine with deterministic RNG and SSE broadcast\nconst encoder = new TextEncoder();\nlet state = {\n    running: false,\n    width: 50,\n    height: 50,\n    totalPixels: 2500,\n    pixels: [],\n    holders: [],\n    neighbors: [],\n    fightsPerTick: Math.max(200, Number(process.env.FIGHTS_PER_TICK || 1200)),\n    rngState: 12345,\n    tick: 0,\n    interval: null,\n    startMs: 0,\n    roundId: 0,\n    phase: \"idle\",\n    nextRoundAt: 0,\n    winnerIndex: null,\n    nextPhaseAt: 0,\n    phaseTimeout: null,\n    feesPoolLamports: 0\n};\nconst clients = new Map();\nlet nextClientId = 1;\nfunction rand() {\n    // LCG deterministic RNG\n    let s = state.rngState;\n    s = (s * 9301 + 49297) % 233280;\n    state.rngState = s;\n    return s / 233280;\n}\nfunction buildNeighbors(width, height) {\n    const total = width * height;\n    const nbs = Array.from({\n        length: total\n    }, ()=>[]);\n    for(let idx = 0; idx < total; idx++){\n        const x = idx % width;\n        const y = Math.floor(idx / width);\n        if (x > 0) nbs[idx].push(idx - 1);\n        if (x < width - 1) nbs[idx].push(idx + 1);\n        if (y > 0) nbs[idx].push(idx - width);\n        if (y < height - 1) nbs[idx].push(idx + width);\n    }\n    return nbs;\n}\nfunction distributePixelsDeterministic() {\n    const total = state.width * state.height;\n    const pixels = Array.from({\n        length: total\n    }, (_, i)=>({\n            index: i,\n            owner: null,\n            position: {\n                x: i % state.width,\n                y: Math.floor(i / state.width)\n            },\n            color: \"#333\"\n        }));\n    // Build and shuffle indices deterministically\n    const indices = Array.from({\n        length: total\n    }, (_, i)=>i);\n    for(let i = indices.length - 1; i > 0; i--){\n        const j = Math.floor(rand() * (i + 1));\n        const tmp = indices[i];\n        indices[i] = indices[j];\n        indices[j] = tmp;\n    }\n    const desiredCounts = state.holders.map((h)=>Math.max(0, Math.floor(h.pixels)));\n    let sum = desiredCounts.reduce((a, b)=>a + b, 0);\n    let remaining = total - sum;\n    let k = 0;\n    while(remaining > 0 && desiredCounts.length > 0){\n        desiredCounts[k % desiredCounts.length]++;\n        k++;\n        remaining--;\n    }\n    let cursor = 0;\n    for(let holderIndex = 0; holderIndex < state.holders.length; holderIndex++){\n        const count = Math.min(desiredCounts[holderIndex] || 0, indices.length - cursor);\n        const color = state.holders[holderIndex].color;\n        for(let c = 0; c < count; c++){\n            const pixIdx = indices[cursor++];\n            pixels[pixIdx].owner = holderIndex;\n            pixels[pixIdx].color = color;\n        }\n        if (cursor >= indices.length) break;\n    }\n    state.pixels = pixels;\n}\nfunction tickOnce() {\n    if (!state.running) return;\n    const total = state.pixels.length;\n    if (total <= 0) return;\n    for(let r = 0; r < state.fightsPerTick; r++){\n        const aIndex = Math.min(total - 1, Math.max(0, Math.floor(rand() * total)));\n        const aOwner = state.pixels[aIndex].owner;\n        if (aOwner === null) continue;\n        const neighbors = state.neighbors[aIndex];\n        if (!neighbors || neighbors.length === 0) continue;\n        const pick = Math.min(neighbors.length - 1, Math.max(0, Math.floor(rand() * neighbors.length)));\n        const bIndex = neighbors[pick];\n        if (typeof bIndex !== \"number\" || bIndex < 0 || bIndex >= total) continue;\n        const bOwner = state.pixels[bIndex].owner;\n        if (bOwner === null || bOwner === aOwner) continue;\n        const holderA = state.holders[aOwner];\n        const holderB = state.holders[bOwner];\n        const probA = 0.5;\n        if (rand() < probA) {\n            state.pixels[bIndex].owner = aOwner;\n            state.pixels[bIndex].color = holderA.color;\n        } else {\n            state.pixels[aIndex].owner = bOwner;\n            state.pixels[aIndex].color = holderB.color;\n        }\n    }\n    state.tick++;\n    // Broadcast snapshot (throttled)\n    if (state.tick % 4 === 0) {\n        broadcast({\n            type: \"snapshot\",\n            tick: state.tick,\n            startMs: state.startMs,\n            roundId: state.roundId,\n            pixels: state.pixels,\n            holders: state.holders\n        });\n    }\n    // Winner check: only one owner remains\n    const counts = {};\n    for(let i = 0; i < state.pixels.length; i++){\n        const o = state.pixels[i].owner;\n        if (o !== null) counts[o] = (counts[o] || 0) + 1;\n    }\n    const owners = Object.keys(counts);\n    if (owners.length === 1) {\n        const winnerIndex = parseInt(owners[0]);\n        state.winnerIndex = winnerIndex;\n        state.phase = \"winner\";\n        state.running = false;\n        state.nextRoundAt = Date.now() + 10000;\n        broadcast({\n            type: \"winner\",\n            winnerIndex,\n            nextRoundAt: state.nextRoundAt,\n            holders: state.holders\n        });\n        stop();\n        // Efter 10s (winner-visning) starter vi næste serverflow\n        try {\n            clearPhaseTimeout();\n            state.phaseTimeout = setTimeout(()=>{\n                try {\n                    state.onWinner && state.onWinner(winnerIndex);\n                } catch  {}\n            }, 10000);\n        } catch  {}\n    }\n}\nfunction start(params) {\n    stop();\n    state.width = params.width && params.width > 0 ? params.width : 50;\n    state.height = params.height && params.height > 0 ? params.height : 50;\n    state.totalPixels = state.width * state.height;\n    state.holders = params.holders || [];\n    state.fightsPerTick = params.fightsPerTick && params.fightsPerTick > 0 ? params.fightsPerTick : 4000;\n    state.rngState = typeof params.seed === \"number\" ? params.seed : 12345;\n    state.neighbors = buildNeighbors(state.width, state.height);\n    state.tick = 0;\n    state.startMs = Date.now();\n    state.roundId = (state.roundId || 0) + 1;\n    state.phase = \"running\";\n    state.nextRoundAt = 0;\n    state.winnerIndex = null;\n    state.nextPhaseAt = 0;\n    distributePixelsDeterministic();\n    state.running = true;\n    const tickMs = Math.max(10, Number(process.env.TICK_INTERVAL_MS || 15));\n    state.interval = setInterval(tickOnce, tickMs);\n}\nfunction stop() {\n    state.running = false;\n    if (state.interval) {\n        clearInterval(state.interval);\n        state.interval = null;\n    }\n}\nfunction broadcast(obj) {\n    const data = encoder.encode(`data: ${JSON.stringify(obj)}\\n\\n`);\n    clients.forEach((client)=>{\n        try {\n            client.enqueue(data);\n        } catch  {}\n    });\n}\nfunction addClient(enqueue) {\n    const id = nextClientId++;\n    clients.set(id, {\n        enqueue,\n        id\n    });\n    // Send a hello event to open the stream\n    try {\n        enqueue(encoder.encode(\": connected\\n\\n\"));\n    } catch  {}\n    return ()=>{\n        clients.delete(id);\n    };\n}\nfunction startRound(params) {\n    start(params);\n}\nfunction getCurrentState() {\n    return {\n        running: state.running,\n        tick: state.tick,\n        width: state.width,\n        height: state.height,\n        holders: state.holders,\n        pixels: state.pixels,\n        startMs: state.startMs,\n        roundId: state.roundId,\n        phase: state.phase,\n        nextRoundAt: state.nextRoundAt,\n        winnerIndex: state.winnerIndex,\n        nextPhaseAt: state.nextPhaseAt\n    };\n}\nfunction isRunning() {\n    return state.running;\n}\nfunction setOnWinner(handler) {\n    state.onWinner = handler;\n}\n// --- Serverstyret fase-flow (claim -> snapshot -> starting -> running) ---\nfunction clearPhaseTimeout() {\n    if (state.phaseTimeout) {\n        clearTimeout(state.phaseTimeout);\n        state.phaseTimeout = null;\n    }\n}\nfunction defaultHolders() {\n    const total = 100;\n    const base = Math.floor(state.width * state.height / total);\n    return Array.from({\n        length: total\n    }, (_, i)=>({\n            address: `HOLDER_${i.toString().padStart(3, \"0\")}`,\n            balance: 1,\n            percentage: 1,\n            pixels: base,\n            color: `hsl(${Math.round(i * 360 / total)}, 80%, 50%)`\n        }));\n}\nfunction startServerFlow(params) {\n    clearPhaseTimeout();\n    stop();\n    state.phase = \"idle\";\n    state.running = false;\n    state.winnerIndex = null;\n    const claimMs = typeof params?.claimMs === \"number\" ? params.claimMs : 1000;\n    const snapshotMs = typeof params?.snapshotMs === \"number\" ? params.snapshotMs : 5000;\n    const startingMs = typeof params?.startingMs === \"number\" ? params.startingMs : 3000;\n    // Phase: claim\n    state.phase = \"claim\";\n    state.nextPhaseAt = Date.now() + claimMs;\n    state.feesPoolLamports = 0;\n    broadcast({\n        type: \"phase\",\n        phase: \"claim\",\n        endsAt: state.nextPhaseAt,\n        feesPoolLamports: state.feesPoolLamports\n    });\n    state.phaseTimeout = setTimeout(()=>{\n        // Phase: snapshot (bestem holders)\n        state.phase = \"snapshot\";\n        state.nextPhaseAt = Date.now() + snapshotMs;\n        // For nu: brug params.holders eller default\n        state.holders = params?.holders && params.holders.length ? params.holders : defaultHolders();\n        broadcast({\n            type: \"phase\",\n            phase: \"snapshot\",\n            endsAt: state.nextPhaseAt,\n            holders: state.holders,\n            feesPoolLamports: state.feesPoolLamports\n        });\n        clearPhaseTimeout();\n        state.phaseTimeout = setTimeout(()=>{\n            // Phase: starting (nedtælling før running)\n            state.phase = \"starting\";\n            state.nextPhaseAt = Date.now() + startingMs;\n            broadcast({\n                type: \"phase\",\n                phase: \"starting\",\n                endsAt: state.nextPhaseAt,\n                feesPoolLamports: state.feesPoolLamports\n            });\n            clearPhaseTimeout();\n            state.phaseTimeout = setTimeout(()=>{\n                // Start round (running)\n                start({\n                    holders: state.holders,\n                    seed: Date.now() % 100000,\n                    fightsPerTick: Math.max(200, Number(process.env.FIGHTS_PER_TICK || 1200)),\n                    width: state.width,\n                    height: state.height\n                });\n            }, startingMs);\n        }, snapshotMs);\n    }, claimMs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/server/gameEngine.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CCheff%5CDownloads%5Cvibecodingcoin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();